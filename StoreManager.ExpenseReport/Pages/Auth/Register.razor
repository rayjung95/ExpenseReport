@page "/auth/register"
@layout AuthLayout
@using StoreManager.Shared.Models

@inject AuthenticationService authService
@inject NavigationManager navigationManager



<div class="content-wrapper mrl-zero" id="contentWrapper">
    <div class="container">
        <div class="row justify-content-center">

            <div class="col-xl-10 col-lg-12 col-md-9">
                <div class="card o-hidden border-0 my-5">
                    <div class="card-body p-0">
                        <!-- Nested Row within Card Body -->
                        <div class="row">
                            <div class="col-lg-5 d-none d-lg-block" style=" background: url('/images/bg-register.jpg');
                                background-position: center;
                                background-size: cover; "></div>
                            <div class="col-lg-7">
                                <div class="p-5">
                                    <div class="text-center">
                                        <h1 class="h4 text-gray-900 mb-4">Register</h1>
                                    </div>
                                    <EditForm Model="model" OnValidSubmit="RegisterUser">
                                        <DataAnnotationsValidator />
                                        <ValidationSummary />
                                        <RadzenCard>
                                            @if (!string.IsNullOrWhiteSpace(message))
                                            {
                                                <div class="alert alert-info">@message</div>
                                            }
                                            <AlertMessage Message="@message" MessageType="@messageType" />
                                            <label>First Name</label>
                                            <RadzenTextBox @bind-Value="model.FirstName">

                                            </RadzenTextBox>

                                            <label>Last Name</label>
                                            <RadzenTextBox @bind-Value="model.LastName">

                                            </RadzenTextBox>

                                            <label>User Name</label>
                                            <RadzenTextBox @bind-Value="model.UserName">

                                            </RadzenTextBox>

                                            <label>Emaill</label>
                                            <RadzenTextBox @bind-Value="model.Email">

                                            </RadzenTextBox>

                                            <label>Password</label>
                                            <RadzenTextBox @bind-Value="model.Password">

                                            </RadzenTextBox>

                                            <label>Confrim Password</label>
                                            <RadzenTextBox @bind-Value="model.ConfirmPassword">

                                            </RadzenTextBox>
                                            <hr />
                                            <RadzenButton ButtonType="Radzen.ButtonType.Submit"
                                                          Text="Register"
                                                          ButtonStyle="Radzen.ButtonStyle.Primary"
                                                          Disabled="isBusy"
                                                          class="btn-block mr-2" />
                                            <RadzenButton ButtonType="Radzen.ButtonType.Button"
                                                          Text="Login"
                                                          ButtonStyle="Radzen.ButtonStyle.Secondary"
                                                          Disabled="isBusy"
                                                          class="btn-block mr-2" Click="GoToLogin" />

                                        </RadzenCard>
                                    </EditForm>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    RegisterRequest model = new RegisterRequest();


    bool isBusy = false;
    string message = string.Empty;

    Models.AlertMessageType messageType = Models.AlertMessageType.Success;

    public async Task RegisterUser()
    {
        isBusy = true;

        var result = await authService.RegisterUserAsync(model);
        if (result.Succeeded)
        {
            message = result.Message;
            messageType = Models.AlertMessageType.Success;
        }
        else
        {

            message = "Something went wrong";
            messageType = Models.AlertMessageType.Error;

        }


        isBusy = false;

    }

    void GoToLogin()
    {
        navigationManager.NavigateTo("/auth/login");
    }
}
